
[*********************100%***********************]  1 of 1 completed
<class 'numpy.ndarray'>
<class 'numpy.ndarray'>
689
689
689
torch.Size([689, 5, 8])
689
20
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.dense.weight', 'lm_head.bias', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
SiameseModel(
  (roberta): RobertaModel(
    (embeddings): RobertaEmbeddings(
      (word_embeddings): Embedding(50265, 1024, padding_idx=1)
      (position_embeddings): Embedding(514, 1024, padding_idx=1)
      (token_type_embeddings): Embedding(1, 1024)
      (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): RobertaEncoder(
      (layer): ModuleList(
        (0): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (1): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (2): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (3): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (4): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (5): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (6): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (7): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (8): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (10): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (11): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (12): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (13): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (14): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (15): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (16): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (17): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (18): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (19): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (20): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (21): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (22): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (23): RobertaLayer(
          (attention): RobertaAttention(
            (self): RobertaSelfAttention(
              (query): Linear(in_features=1024, out_features=1024, bias=True)
              (key): Linear(in_features=1024, out_features=1024, bias=True)
              (value): Linear(in_features=1024, out_features=1024, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): RobertaSelfOutput(
              (dense): Linear(in_features=1024, out_features=1024, bias=True)
              (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): RobertaIntermediate(
            (dense): Linear(in_features=1024, out_features=4096, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): RobertaOutput(
            (dense): Linear(in_features=4096, out_features=1024, bias=True)
            (LayerNorm): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): RobertaPooler(
      (dense): Linear(in_features=1024, out_features=1024, bias=True)
      (activation): Tanh()
    )
  )
  (lstm1): LSTM(8, 20, batch_first=True)
  (lstm2): LSTM(1024, 768, batch_first=True)
  (fc1): Linear(in_features=20, out_features=10, bias=True)
  (fc2): Linear(in_features=768, out_features=256, bias=True)
  (fc3): Linear(in_features=266, out_features=128, bias=True)
  (fc4): Linear(in_features=128, out_features=64, bias=True)
  (fc5): Linear(in_features=64, out_features=3, bias=True)
)
409
Some weights of the model checkpoint at roberta-large were not used when initializing RobertaModel: ['lm_head.decoder.weight', 'lm_head.dense.weight', 'lm_head.bias', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
0it [00:00, ?it/s]Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
/Users/visriv/Library/Python/3.9/lib/python/site-packages/transformers/tokenization_utils_base.py:2364: FutureWarning: The `pad_to_max_length` argument is deprecated and will be removed in a future version, use `padding=True` or `padding='longest'` to pad to the longest sequence in the batch, or use `padding='max_length'` to pad to a max length. In this case, you can give a specific length with `max_length` (e.g. `max_length=45`) or leave max_length to None to pad to the maximal input size of the model (e.g. 512 for Bert).
  warnings.warn(
/var/folders/tw/t5br5nkd2k3f065pr50zxvn80000gn/T/ipykernel_34449/3665585654.py:43: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'ids': torch.tensor(input_ids, dtype=torch.long),
/var/folders/tw/t5br5nkd2k3f065pr50zxvn80000gn/T/ipykernel_34449/3665585654.py:44: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'mask': torch.tensor(attention_masks, dtype=torch.long),
/var/folders/tw/t5br5nkd2k3f065pr50zxvn80000gn/T/ipykernel_34449/3665585654.py:45: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'token_type_ids': torch.tensor(token_type_ids, dtype=torch.long),
/var/folders/tw/t5br5nkd2k3f065pr50zxvn80000gn/T/ipykernel_34449/3665585654.py:46: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  'targets': torch.tensor(y_train[index], dtype=torch.long)
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1182, 0.0656, 0.0110],
        [0.1180, 0.0657, 0.0109],
        [0.1183, 0.0653, 0.0107],
        [0.1182, 0.0654, 0.0107],
        [0.1181, 0.0655, 0.0108],
        [0.1182, 0.0655, 0.0107],
        [0.1182, 0.0654, 0.0107],
        [0.1182, 0.0655, 0.0107]], grad_fn=<AddmmBackward0>)
1it [00:20, 20.83s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 4.9364,  1.2416, -3.3211],
        [ 4.9365,  1.2415, -3.3216],
        [ 4.9365,  1.2416, -3.3214],
        [ 4.9362,  1.2416, -3.3213],
        [ 4.9364,  1.2416, -3.3214],
        [ 4.9363,  1.2420, -3.3212],
        [ 4.9364,  1.2415, -3.3212],

2it [00:45, 23.32s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[-0.3947, -0.1570,  1.1246],
        [-0.3946, -0.1570,  1.1245],
        [-0.3948, -0.1569,  1.1246],
        [-0.3947, -0.1570,  1.1246],
        [-0.3947, -0.1570,  1.1246],
        [-0.3945, -0.1571,  1.1246],
        [-0.3947, -0.1569,  1.1244],

3it [01:10, 24.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[1.1937, 0.6361, 0.5947],
        [1.1941, 0.6360, 0.5948],
        [1.1944, 0.6359, 0.5949],
        [1.1950, 0.6358, 0.5952],
        [1.1938, 0.6360, 0.5946],
        [1.1939, 0.6360, 0.5947],
        [1.1938, 0.6361, 0.5946],

4it [01:39, 25.73s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 2.6209,  1.3814, -1.4685],
        [ 2.6214,  1.3812, -1.4690],
        [ 2.6213,  1.3812, -1.4689],
        [ 2.6213,  1.3813, -1.4687],
        [ 2.6222,  1.3813, -1.4689],
        [ 2.6206,  1.3811, -1.4688],
        [ 2.6209,  1.3811, -1.4689],

5it [02:08, 27.00s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8289,  0.5408, -0.4469],
        [ 0.8289,  0.5407, -0.4470],
        [ 0.8286,  0.5403, -0.4470],
        [ 0.8290,  0.5408, -0.4468],
        [ 0.8290,  0.5408, -0.4468],
        [ 0.8290,  0.5406, -0.4469],
        [ 0.8290,  0.5408, -0.4469],

6it [02:35, 27.05s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 2.5084, -0.3321, -0.8998],
        [ 2.5084, -0.3321, -0.8998],
        [ 2.5084, -0.3321, -0.8998],
        [ 2.5084, -0.3321, -0.8999],
        [ 2.5083, -0.3320, -0.8995],
        [ 2.5084, -0.3322, -0.8998],
        [ 2.5083, -0.3321, -0.8993],

7it [03:02, 26.87s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.1175,  0.2811, -0.5423],
        [ 1.1175,  0.2809, -0.5427],
        [ 1.1175,  0.2811, -0.5422],
        [ 1.1175,  0.2813, -0.5419],
        [ 1.1175,  0.2812, -0.5423],
        [ 1.1176,  0.2814, -0.5418],
        [ 1.1175,  0.2812, -0.5422],

8it [03:30, 27.26s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5426,  0.3073, -0.2189],
        [ 0.5426,  0.3073, -0.2191],
        [ 0.5426,  0.3074, -0.2189],
        [ 0.5426,  0.3074, -0.2189],
        [ 0.5426,  0.3073, -0.2189],
        [ 0.5426,  0.3074, -0.2187],
        [ 0.5426,  0.3073, -0.2190],

9it [04:00, 28.12s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.2081, 0.2302, 0.0775],
        [0.2081, 0.2305, 0.0778],
        [0.2082, 0.2304, 0.0777],
        [0.2081, 0.2305, 0.0778],
        [0.2081, 0.2303, 0.0775],
        [0.2081, 0.2301, 0.0774],
        [0.2081, 0.2302, 0.0775],

10it [04:31, 29.19s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1528, 0.1796, 0.0789],
        [0.1528, 0.1795, 0.0788],
        [0.1528, 0.1795, 0.0789],
        [0.1528, 0.1795, 0.0789],
        [0.1527, 0.1795, 0.0787],
        [0.1528, 0.1795, 0.0788],
        [0.1528, 0.1795, 0.0789],

11it [05:00, 29.13s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1169, 0.1942, 0.0482],
        [0.1168, 0.1942, 0.0481],
        [0.1167, 0.1942, 0.0480],
        [0.1168, 0.1942, 0.0481],
        [0.1168, 0.1943, 0.0481],
        [0.1168, 0.1942, 0.0481],
        [0.1169, 0.1942, 0.0482],

12it [05:27, 28.49s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1014, 0.1992, 0.0399],
        [0.1014, 0.1992, 0.0399],
        [0.1013, 0.1992, 0.0399],
        [0.1013, 0.1993, 0.0399],
        [0.1014, 0.1992, 0.0399],
        [0.1013, 0.1992, 0.0399],
        [0.1014, 0.1992, 0.0399],

13it [05:56, 28.47s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1136, 0.1665, 0.0523],
        [0.1136, 0.1665, 0.0523],
        [0.1136, 0.1665, 0.0522],
        [0.1136, 0.1665, 0.0523],
        [0.1136, 0.1665, 0.0523],
        [0.1135, 0.1665, 0.0523],
        [0.1136, 0.1665, 0.0523],

14it [06:25, 28.77s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1558, 0.1553, 0.0414],
        [0.1558, 0.1552, 0.0413],
        [0.1558, 0.1552, 0.0412],
        [0.1558, 0.1552, 0.0413],
        [0.1558, 0.1552, 0.0413],
        [0.1559, 0.1552, 0.0413],
        [0.1558, 0.1552, 0.0412],

15it [06:56, 29.50s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.2264, 0.1612, 0.0219],
        [0.2265, 0.1612, 0.0219],
        [0.2263, 0.1611, 0.0218],
        [0.2265, 0.1612, 0.0219],
        [0.2264, 0.1612, 0.0219],
        [0.2264, 0.1611, 0.0219],
        [0.2265, 0.1612, 0.0220],

16it [07:23, 28.60s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.3196, 0.1225, 0.0104],
        [0.3197, 0.1225, 0.0104],
        [0.3195, 0.1223, 0.0103],
        [0.3197, 0.1225, 0.0105],
        [0.3196, 0.1225, 0.0104],
        [0.3196, 0.1225, 0.0104],
        [0.3196, 0.1225, 0.0104],

17it [07:48, 27.51s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4508,  0.0680, -0.0292],
        [ 0.4506,  0.0683, -0.0291],
        [ 0.4507,  0.0681, -0.0292],
        [ 0.4506,  0.0682, -0.0291],
        [ 0.4506,  0.0682, -0.0292],
        [ 0.4504,  0.0684, -0.0292],
        [ 0.4506,  0.0683, -0.0292],

18it [08:15, 27.55s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5665, -0.1121,  0.0232],
        [ 0.5665, -0.1120,  0.0232],
        [ 0.5667, -0.1122,  0.0232],
        [ 0.5671, -0.1125,  0.0232],
        [ 0.5668, -0.1123,  0.0232],
        [ 0.5673, -0.1126,  0.0232],
        [ 0.5664, -0.1120,  0.0232],

19it [08:45, 28.21s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7910, -0.3969,  0.0714],
        [ 0.7901, -0.3964,  0.0712],
        [ 0.7904, -0.3967,  0.0712],
        [ 0.7902, -0.3964,  0.0712],
        [ 0.7904, -0.3965,  0.0712],
        [ 0.7902, -0.3966,  0.0712],
        [ 0.7906, -0.3967,  0.0713],

20it [09:09, 26.99s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.2199, -0.9007,  0.1967],
        [ 1.2208, -0.9012,  0.1970],
        [ 1.2221, -0.9023,  0.1977],
        [ 1.2210, -0.9015,  0.1973],
        [ 1.2200, -0.9008,  0.1967],
        [ 1.2220, -0.9021,  0.1975],
        [ 1.2203, -0.9009,  0.1969],

21it [09:35, 26.53s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.5275, -1.3117,  0.3651],
        [ 1.5252, -1.3099,  0.3642],
        [ 1.5266, -1.3110,  0.3647],
        [ 1.5281, -1.3122,  0.3653],
        [ 1.5271, -1.3114,  0.3649],
        [ 1.5261, -1.3106,  0.3644],
        [ 1.5269, -1.3113,  0.3647],

22it [10:00, 26.26s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.7967, 0.0946, 0.5965],
        [0.7980, 0.0929, 0.5968],
        [0.7967, 0.0948, 0.5963],
        [0.7964, 0.0952, 0.5964],
        [0.7985, 0.0925, 0.5969],
        [0.7974, 0.0938, 0.5966],
        [0.7976, 0.0935, 0.5967],

23it [10:26, 25.96s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[-0.2102,  3.2822,  1.2552],
        [-0.2107,  3.2832,  1.2556],
        [-0.2108,  3.2833,  1.2556],
        [-0.2109,  3.2833,  1.2555],
        [-0.2105,  3.2831,  1.2556],
        [-0.2104,  3.2832,  1.2557],
        [-0.2104,  3.2825,  1.2553],

24it [10:51, 25.70s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.2917, 1.0722, 0.5626],
        [0.2919, 1.0719, 0.5627],
        [0.2917, 1.0724, 0.5627],
        [0.2916, 1.0726, 0.5627],
        [0.2912, 1.0735, 0.5627],
        [0.2913, 1.0735, 0.5628],
        [0.2919, 1.0718, 0.5626],

25it [11:16, 25.59s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7102, -0.6845,  0.2856],
        [ 0.7106, -0.6848,  0.2859],
        [ 0.7113, -0.6852,  0.2862],
        [ 0.7116, -0.6856,  0.2865],
        [ 0.7111, -0.6852,  0.2862],
        [ 0.7110, -0.6851,  0.2860],
        [ 0.7115, -0.6854,  0.2864],

26it [11:41, 25.39s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6414, -0.5910,  0.3079],
        [ 0.6406, -0.5895,  0.3073],
        [ 0.6404, -0.5893,  0.3072],
        [ 0.6405, -0.5894,  0.3073],
        [ 0.6408, -0.5899,  0.3075],
        [ 0.6408, -0.5899,  0.3074],
        [ 0.6403, -0.5890,  0.3071],

27it [12:07, 25.69s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5207, -0.3872,  0.2241],
        [ 0.5207, -0.3872,  0.2241],
        [ 0.5209, -0.3872,  0.2241],
        [ 0.5207, -0.3871,  0.2240],
        [ 0.5207, -0.3870,  0.2240],
        [ 0.5214, -0.3877,  0.2244],
        [ 0.5210, -0.3873,  0.2241],

28it [12:34, 25.97s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3863, -0.1840,  0.0744],
        [ 0.3856, -0.1834,  0.0741],
        [ 0.3855, -0.1833,  0.0740],
        [ 0.3856, -0.1834,  0.0741],
        [ 0.3846, -0.1827,  0.0737],
        [ 0.3866, -0.1841,  0.0745],
        [ 0.3853, -0.1831,  0.0739],

29it [13:00, 25.86s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.2788, 0.0175, 0.0239],
        [0.2791, 0.0171, 0.0238],
        [0.2794, 0.0169, 0.0238],
        [0.2794, 0.0169, 0.0238],
        [0.2789, 0.0174, 0.0239],
        [0.2792, 0.0171, 0.0238],
        [0.2786, 0.0177, 0.0240],

30it [13:25, 25.68s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.2906, -0.0657,  0.0400],
        [ 0.2897, -0.0649,  0.0401],
        [ 0.2898, -0.0651,  0.0401],
        [ 0.2895, -0.0647,  0.0402],
        [ 0.2900, -0.0651,  0.0401],
        [ 0.2901, -0.0653,  0.0401],
        [ 0.2898, -0.0650,  0.0402],

31it [13:50, 25.47s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3707, -0.1950, -0.0488],
        [ 0.3713, -0.1951, -0.0488],
        [ 0.3704, -0.1949, -0.0488],
        [ 0.3704, -0.1949, -0.0488],
        [ 0.3713, -0.1951, -0.0488],
        [ 0.3705, -0.1950, -0.0488],
        [ 0.3713, -0.1952, -0.0490],

32it [14:16, 25.68s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5380, -0.4234, -0.2303],
        [ 0.5376, -0.4233, -0.2302],
        [ 0.5381, -0.4234, -0.2303],
        [ 0.5376, -0.4233, -0.2301],
        [ 0.5373, -0.4232, -0.2301],
        [ 0.5379, -0.4233, -0.2302],
        [ 0.5362, -0.4230, -0.2300],

33it [14:42, 25.85s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7199, -0.7893, -0.2472],
        [ 0.7205, -0.7894, -0.2474],
        [ 0.7193, -0.7893, -0.2473],
        [ 0.7195, -0.7893, -0.2473],
        [ 0.7207, -0.7894, -0.2474],
        [ 0.7209, -0.7895, -0.2474],
        [ 0.7199, -0.7893, -0.2474],

34it [15:08, 25.80s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7789, -0.9752, -0.1440],
        [ 0.7787, -0.9753, -0.1440],
        [ 0.7790, -0.9753, -0.1440],
        [ 0.7792, -0.9753, -0.1441],
        [ 0.7794, -0.9753, -0.1440],
        [ 0.7786, -0.9752, -0.1440],
        [ 0.7784, -0.9752, -0.1440],

35it [15:33, 25.54s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9555, -1.3263, -0.1367],
        [ 0.9555, -1.3264, -0.1367],
        [ 0.9545, -1.3262, -0.1367],
        [ 0.9554, -1.3264, -0.1367],
        [ 0.9554, -1.3264, -0.1367],
        [ 0.9557, -1.3264, -0.1367],
        [ 0.9553, -1.3263, -0.1366],

36it [15:58, 25.49s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.0070, -1.5334, -0.0175],
        [ 1.0072, -1.5334, -0.0175],
        [ 1.0077, -1.5334, -0.0176],
        [ 1.0070, -1.5335, -0.0175],
        [ 1.0073, -1.5334, -0.0175],
        [ 1.0074, -1.5334, -0.0175],
        [ 1.0070, -1.5334, -0.0175],

37it [16:25, 25.75s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.2332, -1.9121, -0.0882],
        [ 1.2339, -1.9121, -0.0881],
        [ 1.2341, -1.9121, -0.0881],
        [ 1.2338, -1.9121, -0.0881],
        [ 1.2337, -1.9121, -0.0881],
        [ 1.2343, -1.9122, -0.0881],
        [ 1.2339, -1.9121, -0.0881],

38it [16:50, 25.70s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.2012, -1.7675, -0.1051],
        [ 1.2016, -1.7675, -0.1051],
        [ 1.2005, -1.7675, -0.1053],
        [ 1.2023, -1.7674, -0.1051],
        [ 1.2012, -1.7675, -0.1051],
        [ 1.2015, -1.7676, -0.1051],
        [ 1.2016, -1.7674, -0.1051],

39it [17:18, 26.24s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9955, -1.3159, -0.0740],
        [ 0.9959, -1.3159, -0.0738],
        [ 0.9957, -1.3161, -0.0738],
        [ 0.9970, -1.3152, -0.0739],
        [ 0.9953, -1.3161, -0.0738],
        [ 0.9957, -1.3159, -0.0738],
        [ 0.9961, -1.3157, -0.0739],

40it [17:58, 30.36s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6408, -0.8255,  0.0958],
        [ 0.6407, -0.8256,  0.0957],
        [ 0.6413, -0.8255,  0.0953],
        [ 0.6411, -0.8256,  0.0955],
        [ 0.6404, -0.8256,  0.0960],
        [ 0.6409, -0.8255,  0.0957],
        [ 0.6403, -0.8255,  0.0961],

41it [18:30, 30.82s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4002, -0.4836,  0.1415],
        [ 0.4002, -0.4836,  0.1414],
        [ 0.4005, -0.4835,  0.1411],
        [ 0.4005, -0.4835,  0.1412],
        [ 0.4004, -0.4835,  0.1413],
        [ 0.3999, -0.4837,  0.1415],
        [ 0.4001, -0.4837,  0.1415],

42it [18:59, 30.39s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.2616, -0.2473,  0.1411],
        [ 0.2617, -0.2473,  0.1410],
        [ 0.2619, -0.2472,  0.1409],
        [ 0.2614, -0.2475,  0.1413],
        [ 0.2619, -0.2472,  0.1410],
        [ 0.2617, -0.2473,  0.1410],
        [ 0.2615, -0.2474,  0.1412],

43it [19:30, 30.63s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.1806, -0.0959,  0.1426],
        [ 0.1805, -0.0960,  0.1426],
        [ 0.1806, -0.0959,  0.1425],
        [ 0.1804, -0.0961,  0.1427],
        [ 0.1807, -0.0958,  0.1425],
        [ 0.1803, -0.0961,  0.1427],
        [ 0.1806, -0.0959,  0.1426],

44it [19:57, 29.48s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1320, 0.0130, 0.1167],
        [0.1320, 0.0131, 0.1166],
        [0.1313, 0.0126, 0.1173],
        [0.1322, 0.0132, 0.1164],
        [0.1322, 0.0131, 0.1164],
        [0.1320, 0.0131, 0.1166],
        [0.1319, 0.0129, 0.1167],

45it [20:23, 28.36s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1218, 0.0786, 0.0743],
        [0.1214, 0.0785, 0.0745],
        [0.1216, 0.0786, 0.0744],
        [0.1219, 0.0788, 0.0742],
        [0.1219, 0.0788, 0.0742],
        [0.1215, 0.0786, 0.0744],
        [0.1218, 0.0787, 0.0743],

46it [20:51, 28.31s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1255, 0.1186, 0.0089],
        [0.1253, 0.1186, 0.0089],
        [0.1255, 0.1186, 0.0089],
        [0.1255, 0.1186, 0.0089],
        [0.1258, 0.1187, 0.0090],
        [0.1254, 0.1186, 0.0090],
        [0.1255, 0.1186, 0.0089],

47it [21:19, 28.23s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1122, 0.1290, 0.0034],
        [0.1121, 0.1288, 0.0034],
        [0.1122, 0.1290, 0.0035],
        [0.1122, 0.1290, 0.0035],
        [0.1123, 0.1291, 0.0035],
        [0.1124, 0.1292, 0.0036],
        [0.1122, 0.1290, 0.0035],

48it [21:45, 27.60s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1152, 0.1182, 0.0058],
        [0.1153, 0.1180, 0.0058],
        [0.1153, 0.1182, 0.0058],
        [0.1153, 0.1182, 0.0058],
        [0.1153, 0.1182, 0.0058],
        [0.1152, 0.1182, 0.0057],
        [0.1152, 0.1182, 0.0057],

49it [22:11, 27.20s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1289, 0.0858, 0.0189],
        [0.1294, 0.0853, 0.0194],
        [0.1296, 0.0852, 0.0195],
        [0.1292, 0.0855, 0.0192],
        [0.1296, 0.0852, 0.0195],
        [0.1291, 0.0855, 0.0191],
        [0.1292, 0.0855, 0.0192],

50it [22:38, 26.92s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1579, 0.0437, 0.0341],
        [0.1580, 0.0436, 0.0342],
        [0.1575, 0.0439, 0.0337],
        [0.1579, 0.0437, 0.0341],
        [0.1577, 0.0438, 0.0339],
        [0.1578, 0.0438, 0.0340],
        [0.1583, 0.0435, 0.0344],

51it [23:08, 27.94s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.1838, 0.0383, 0.0448],
        [0.1838, 0.0383, 0.0448],
        [0.1837, 0.0384, 0.0447],
        [0.1840, 0.0382, 0.0450],
        [0.1838, 0.0383, 0.0449],
        [0.1845, 0.0381, 0.0454],
        [0.1843, 0.0381, 0.0453],

52it [23:39, 28.77s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[0.2348, 0.0077, 0.0734],
        [0.2345, 0.0078, 0.0732],
        [0.2348, 0.0078, 0.0734],
        [0.2347, 0.0078, 0.0734],
        [0.2342, 0.0080, 0.0729],
        [0.2338, 0.0083, 0.0724],
        [0.2347, 0.0078, 0.0733],

53it [24:08, 29.06s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.2941, -0.0300,  0.1159],
        [ 0.2940, -0.0301,  0.1159],
        [ 0.2943, -0.0298,  0.1161],
        [ 0.2938, -0.0302,  0.1158],
        [ 0.2939, -0.0301,  0.1158],
        [ 0.2939, -0.0301,  0.1158],
        [ 0.2945, -0.0297,  0.1162],

54it [24:41, 30.11s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3472, -0.0548,  0.1273],
        [ 0.3468, -0.0549,  0.1270],
        [ 0.3469, -0.0549,  0.1271],
        [ 0.3467, -0.0549,  0.1270],
        [ 0.3474, -0.0546,  0.1275],
        [ 0.3472, -0.0547,  0.1274],
        [ 0.3474, -0.0547,  0.1275],

55it [25:17, 31.92s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4009, -0.0408,  0.1112],
        [ 0.4005, -0.0410,  0.1109],
        [ 0.4013, -0.0407,  0.1115],
        [ 0.4010, -0.0408,  0.1113],
        [ 0.4007, -0.0409,  0.1110],
        [ 0.4007, -0.0409,  0.1110],
        [ 0.4007, -0.0409,  0.1110],

56it [25:47, 31.20s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4614, -0.0307,  0.0867],
        [ 0.4622, -0.0303,  0.0870],
        [ 0.4621, -0.0303,  0.0870],
        [ 0.4614, -0.0306,  0.0867],
        [ 0.4618, -0.0305,  0.0869],
        [ 0.4617, -0.0305,  0.0868],
        [ 0.4625, -0.0302,  0.0872],

57it [26:13, 29.75s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5531, -0.0830,  0.1289],
        [ 0.5528, -0.0830,  0.1288],
        [ 0.5539, -0.0828,  0.1291],
        [ 0.5529, -0.0830,  0.1288],
        [ 0.5532, -0.0830,  0.1289],
        [ 0.5528, -0.0831,  0.1288],
        [ 0.5537, -0.0828,  0.1291],

58it [26:41, 29.34s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6496, -0.1386,  0.1498],
        [ 0.6492, -0.1385,  0.1496],
        [ 0.6490, -0.1385,  0.1495],
        [ 0.6490, -0.1385,  0.1495],
        [ 0.6483, -0.1384,  0.1492],
        [ 0.6488, -0.1385,  0.1494],
        [ 0.6484, -0.1384,  0.1492],

59it [27:12, 29.71s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8290, -0.2629,  0.1939],
        [ 0.8276, -0.2625,  0.1934],
        [ 0.8267, -0.2622,  0.1930],
        [ 0.8275, -0.2625,  0.1933],
        [ 0.8281, -0.2626,  0.1935],
        [ 0.8255, -0.2618,  0.1925],
        [ 0.8285, -0.2628,  0.1937],

60it [27:41, 29.66s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9815, -0.3692,  0.1877],
        [ 0.9837, -0.3702,  0.1886],
        [ 0.9837, -0.3702,  0.1886],
        [ 0.9835, -0.3701,  0.1885],
        [ 0.9840, -0.3703,  0.1887],
        [ 0.9840, -0.3703,  0.1887],
        [ 0.9850, -0.3708,  0.1892],

61it [28:14, 30.44s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.1861, -0.5111,  0.1719],
        [ 1.1844, -0.5104,  0.1719],
        [ 1.1853, -0.5108,  0.1719],
        [ 1.1836, -0.5101,  0.1719],
        [ 1.1850, -0.5107,  0.1719],
        [ 1.1845, -0.5105,  0.1719],
        [ 1.1852, -0.5108,  0.1719],

62it [28:53, 33.14s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.4823, -0.6715,  0.0929],
        [ 1.4838, -0.6721,  0.0926],
        [ 1.4847, -0.6725,  0.0925],
        [ 1.4833, -0.6719,  0.0927],
        [ 1.4833, -0.6719,  0.0927],
        [ 1.4826, -0.6716,  0.0928],
        [ 1.4828, -0.6717,  0.0928],

63it [29:22, 31.94s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.2998, -0.5743,  0.1037],
        [ 1.3013, -0.5750,  0.1040],
        [ 1.2991, -0.5740,  0.1035],
        [ 1.2983, -0.5736,  0.1033],
        [ 1.3013, -0.5749,  0.1040],
        [ 1.2991, -0.5740,  0.1035],
        [ 1.2995, -0.5741,  0.1036],

64it [29:49, 30.30s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 1.1245, -0.4906,  0.1373],
        [ 1.1228, -0.4897,  0.1365],
        [ 1.1227, -0.4896,  0.1365],
        [ 1.1232, -0.4899,  0.1367],
        [ 1.1233, -0.4900,  0.1368],
        [ 1.1240, -0.4904,  0.1371],
        [ 1.1227, -0.4896,  0.1365],

65it [30:16, 29.49s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8628, -0.3370,  0.1193],
        [ 0.8612, -0.3359,  0.1183],
        [ 0.8628, -0.3370,  0.1194],
        [ 0.8624, -0.3367,  0.1191],
        [ 0.8628, -0.3369,  0.1193],
        [ 0.8635, -0.3375,  0.1199],
        [ 0.8635, -0.3375,  0.1198],

66it [30:50, 30.63s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6474, -0.2277,  0.1247],
        [ 0.6469, -0.2275,  0.1242],
        [ 0.6476, -0.2278,  0.1248],
        [ 0.6472, -0.2276,  0.1245],
        [ 0.6479, -0.2279,  0.1251],
        [ 0.6479, -0.2279,  0.1252],
        [ 0.6475, -0.2277,  0.1247],

67it [31:26, 32.45s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5288, -0.1478,  0.1401],
        [ 0.5286, -0.1478,  0.1399],
        [ 0.5281, -0.1476,  0.1393],
        [ 0.5285, -0.1478,  0.1397],
        [ 0.5287, -0.1478,  0.1400],
        [ 0.5287, -0.1478,  0.1400],
        [ 0.5286, -0.1478,  0.1399],

68it [32:08, 35.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4541, -0.0955,  0.0910],
        [ 0.4542, -0.0956,  0.0911],
        [ 0.4544, -0.0956,  0.0913],
        [ 0.4541, -0.0955,  0.0910],
        [ 0.4543, -0.0956,  0.0912],
        [ 0.4542, -0.0956,  0.0911],
        [ 0.4541, -0.0955,  0.0910],

69it [32:40, 34.25s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3935, -0.0486,  0.0293],
        [ 0.3935, -0.0486,  0.0292],
        [ 0.3936, -0.0486,  0.0293],
        [ 0.3936, -0.0486,  0.0293],
        [ 0.3934, -0.0486,  0.0292],
        [ 0.3934, -0.0486,  0.0293],
        [ 0.3936, -0.0486,  0.0293],

70it [33:10, 33.12s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3451, -0.0154, -0.0004],
        [ 0.3451, -0.0155, -0.0004],
        [ 0.3451, -0.0155, -0.0004],
        [ 0.3451, -0.0155, -0.0004],
        [ 0.3451, -0.0155, -0.0004],
        [ 0.3451, -0.0155, -0.0004],
        [ 0.3451, -0.0155, -0.0004],

71it [33:39, 31.86s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3256, -0.0038, -0.0246],
        [ 0.3256, -0.0038, -0.0246],
        [ 0.3256, -0.0038, -0.0246],
        [ 0.3256, -0.0038, -0.0247],
        [ 0.3256, -0.0038, -0.0247],
        [ 0.3256, -0.0038, -0.0247],
        [ 0.3256, -0.0038, -0.0247],

72it [34:05, 30.06s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3209, -0.0016, -0.0398],
        [ 0.3210, -0.0016, -0.0396],
        [ 0.3210, -0.0016, -0.0397],
        [ 0.3210, -0.0016, -0.0396],
        [ 0.3211, -0.0016, -0.0396],
        [ 0.3210, -0.0016, -0.0397],
        [ 0.3210, -0.0016, -0.0397],

73it [34:36, 30.32s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3044,  0.0068, -0.0617],
        [ 0.3045,  0.0067, -0.0615],
        [ 0.3044,  0.0067, -0.0616],
        [ 0.3043,  0.0068, -0.0618],
        [ 0.3045,  0.0067, -0.0615],
        [ 0.3044,  0.0067, -0.0616],
        [ 0.3044,  0.0067, -0.0616],

74it [35:07, 30.41s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3181, -0.0006, -0.0632],
        [ 0.3182, -0.0007, -0.0631],
        [ 0.3182, -0.0008, -0.0630],
        [ 0.3181, -0.0007, -0.0632],
        [ 0.3182, -0.0007, -0.0631],
        [ 0.3182, -0.0007, -0.0631],
        [ 0.3181, -0.0007, -0.0632],

75it [35:34, 29.38s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3406, -0.0187, -0.0544],
        [ 0.3406, -0.0188, -0.0541],
        [ 0.3407, -0.0186, -0.0547],
        [ 0.3407, -0.0187, -0.0545],
        [ 0.3407, -0.0187, -0.0545],
        [ 0.3407, -0.0187, -0.0543],
        [ 0.3407, -0.0187, -0.0543],

76it [35:59, 28.25s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3521, -0.0268, -0.0586],
        [ 0.3522, -0.0268, -0.0587],
        [ 0.3521, -0.0268, -0.0587],
        [ 0.3523, -0.0268, -0.0588],
        [ 0.3522, -0.0268, -0.0587],
        [ 0.3522, -0.0268, -0.0587],
        [ 0.3521, -0.0268, -0.0587],

77it [36:27, 27.97s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3630, -0.0309, -0.0759],
        [ 0.3627, -0.0309, -0.0756],
        [ 0.3626, -0.0309, -0.0756],
        [ 0.3628, -0.0309, -0.0757],
        [ 0.3629, -0.0309, -0.0758],
        [ 0.3630, -0.0309, -0.0758],
        [ 0.3628, -0.0309, -0.0757],

78it [36:53, 27.55s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3792, -0.0412, -0.0836],
        [ 0.3793, -0.0412, -0.0837],
        [ 0.3792, -0.0413, -0.0836],
        [ 0.3793, -0.0412, -0.0837],
        [ 0.3792, -0.0413, -0.0836],
        [ 0.3792, -0.0412, -0.0836],
        [ 0.3794, -0.0412, -0.0837],

79it [37:19, 27.06s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3916, -0.0524, -0.0812],
        [ 0.3916, -0.0524, -0.0812],
        [ 0.3914, -0.0525, -0.0810],
        [ 0.3915, -0.0524, -0.0811],
        [ 0.3916, -0.0524, -0.0811],
        [ 0.3915, -0.0524, -0.0811],
        [ 0.3914, -0.0525, -0.0810],

80it [37:45, 26.66s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4160, -0.0699, -0.0791],
        [ 0.4161, -0.0699, -0.0792],
        [ 0.4159, -0.0700, -0.0790],
        [ 0.4161, -0.0699, -0.0792],
        [ 0.4160, -0.0699, -0.0792],
        [ 0.4159, -0.0699, -0.0791],
        [ 0.4159, -0.0700, -0.0791],

81it [38:11, 26.47s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4367, -0.0818, -0.0887],
        [ 0.4365, -0.0819, -0.0886],
        [ 0.4367, -0.0818, -0.0887],
        [ 0.4366, -0.0818, -0.0887],
        [ 0.4366, -0.0818, -0.0887],
        [ 0.4367, -0.0818, -0.0888],
        [ 0.4368, -0.0818, -0.0888],

82it [38:38, 26.55s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4450, -0.0822, -0.1121],
        [ 0.4448, -0.0822, -0.1120],
        [ 0.4453, -0.0821, -0.1123],
        [ 0.4449, -0.0822, -0.1120],
        [ 0.4450, -0.0822, -0.1121],
        [ 0.4448, -0.0822, -0.1120],
        [ 0.4450, -0.0821, -0.1121],

83it [39:03, 26.26s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4463, -0.0773, -0.1374],
        [ 0.4460, -0.0774, -0.1372],
        [ 0.4461, -0.0773, -0.1373],
        [ 0.4460, -0.0774, -0.1372],
        [ 0.4461, -0.0773, -0.1373],
        [ 0.4458, -0.0774, -0.1371],
        [ 0.4459, -0.0774, -0.1372],

84it [39:29, 26.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4492, -0.0743, -0.1601],
        [ 0.4492, -0.0743, -0.1601],
        [ 0.4491, -0.0743, -0.1600],
        [ 0.4494, -0.0742, -0.1601],
        [ 0.4494, -0.0742, -0.1601],
        [ 0.4493, -0.0743, -0.1601],
        [ 0.4493, -0.0743, -0.1601],

85it [39:55, 26.17s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4598, -0.0737, -0.1881],
        [ 0.4595, -0.0737, -0.1881],
        [ 0.4597, -0.0737, -0.1881],
        [ 0.4600, -0.0737, -0.1881],
        [ 0.4597, -0.0737, -0.1881],
        [ 0.4596, -0.0737, -0.1881],
        [ 0.4595, -0.0738, -0.1880],

86it [40:21, 25.96s/it]
e2 shape:  torch.Size([1, 20, 1024])
87it [40:35, 28.00s/it]
0it [00:00, ?it/s]
Train Loss at epoch 0: 1.1499820947647095
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4384, -0.0522, -0.2230],
        [ 0.4385, -0.0521, -0.2230],
        [ 0.4384, -0.0522, -0.2230],
        [ 0.4384, -0.0522, -0.2230],
        [ 0.4383, -0.0522, -0.2230],
        [ 0.4383, -0.0522, -0.2230],
        [ 0.4385, -0.0521, -0.2230],

1it [00:24, 24.19s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4109, -0.0271, -0.2536],
        [ 0.4112, -0.0270, -0.2537],
        [ 0.4116, -0.0269, -0.2537],
        [ 0.4114, -0.0270, -0.2537],
        [ 0.4114, -0.0270, -0.2537],
        [ 0.4114, -0.0270, -0.2537],
        [ 0.4114, -0.0270, -0.2537],

2it [00:49, 25.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4000, -0.0153, -0.2682],
        [ 0.4000, -0.0153, -0.2682],
        [ 0.3999, -0.0153, -0.2682],
        [ 0.3998, -0.0154, -0.2681],
        [ 0.4000, -0.0153, -0.2682],
        [ 0.3998, -0.0154, -0.2681],
        [ 0.4000, -0.0153, -0.2682],

3it [01:15, 25.25s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3906, -0.0034, -0.2876],
        [ 0.3904, -0.0034, -0.2876],
        [ 0.3905, -0.0034, -0.2876],
        [ 0.3909, -0.0032, -0.2877],
        [ 0.3906, -0.0034, -0.2876],
        [ 0.3906, -0.0034, -0.2876],
        [ 0.3908, -0.0033, -0.2876],

4it [01:41, 25.64s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3715,  0.0132, -0.3050],
        [ 0.3718,  0.0134, -0.3050],
        [ 0.3715,  0.0133, -0.3050],
        [ 0.3712,  0.0131, -0.3049],
        [ 0.3714,  0.0132, -0.3049],
        [ 0.3714,  0.0132, -0.3049],
        [ 0.3715,  0.0132, -0.3049],

5it [02:06, 25.52s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3559,  0.0291, -0.3280],
        [ 0.3557,  0.0291, -0.3279],
        [ 0.3557,  0.0291, -0.3279],
        [ 0.3555,  0.0290, -0.3277],
        [ 0.3556,  0.0291, -0.3278],
        [ 0.3556,  0.0290, -0.3278],
        [ 0.3558,  0.0291, -0.3279],

6it [02:32, 25.39s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3416,  0.0364, -0.3269],
        [ 0.3413,  0.0364, -0.3267],
        [ 0.3414,  0.0364, -0.3268],
        [ 0.3413,  0.0364, -0.3267],
        [ 0.3413,  0.0364, -0.3267],
        [ 0.3415,  0.0364, -0.3268],
        [ 0.3413,  0.0364, -0.3267],

7it [02:57, 25.48s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3261,  0.0437, -0.3245],
        [ 0.3260,  0.0436, -0.3244],
        [ 0.3260,  0.0436, -0.3244],
        [ 0.3261,  0.0437, -0.3245],
        [ 0.3261,  0.0437, -0.3245],
        [ 0.3259,  0.0436, -0.3242],
        [ 0.3258,  0.0436, -0.3243],

8it [03:23, 25.64s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3085,  0.0544, -0.3312],
        [ 0.3083,  0.0544, -0.3312],
        [ 0.3085,  0.0544, -0.3312],
        [ 0.3083,  0.0544, -0.3312],
        [ 0.3084,  0.0544, -0.3312],
        [ 0.3084,  0.0544, -0.3312],
        [ 0.3083,  0.0544, -0.3312],

9it [03:48, 25.42s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3030,  0.0581, -0.3305],
        [ 0.3030,  0.0581, -0.3305],
        [ 0.3030,  0.0581, -0.3305],
        [ 0.3032,  0.0582, -0.3307],
        [ 0.3030,  0.0581, -0.3305],
        [ 0.3031,  0.0581, -0.3306],
        [ 0.3031,  0.0581, -0.3306],

10it [04:14, 25.44s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.2998,  0.0628, -0.3370],
        [ 0.2997,  0.0628, -0.3369],
        [ 0.2997,  0.0628, -0.3369],
        [ 0.2999,  0.0629, -0.3370],
        [ 0.2997,  0.0628, -0.3370],
        [ 0.3000,  0.0629, -0.3371],
        [ 0.2997,  0.0628, -0.3369],

11it [04:45, 27.30s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.2983,  0.0685, -0.3496],
        [ 0.2985,  0.0686, -0.3497],
        [ 0.2984,  0.0685, -0.3497],
        [ 0.2985,  0.0686, -0.3498],
        [ 0.2985,  0.0686, -0.3498],
        [ 0.2984,  0.0685, -0.3497],
        [ 0.2987,  0.0687, -0.3499],

12it [05:11, 26.97s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3019,  0.0676, -0.3473],
        [ 0.3019,  0.0677, -0.3473],
        [ 0.3018,  0.0676, -0.3472],
        [ 0.3019,  0.0677, -0.3474],
        [ 0.3020,  0.0678, -0.3475],
        [ 0.3018,  0.0676, -0.3472],
        [ 0.3020,  0.0678, -0.3475],

13it [05:37, 26.61s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3098,  0.0701, -0.3623],
        [ 0.3097,  0.0700, -0.3621],
        [ 0.3098,  0.0701, -0.3623],
        [ 0.3097,  0.0700, -0.3622],
        [ 0.3097,  0.0700, -0.3621],
        [ 0.3096,  0.0699, -0.3619],
        [ 0.3098,  0.0701, -0.3624],

14it [06:03, 26.31s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3251,  0.0662, -0.3696],
        [ 0.3251,  0.0661, -0.3695],
        [ 0.3251,  0.0661, -0.3695],
        [ 0.3251,  0.0662, -0.3696],
        [ 0.3251,  0.0662, -0.3697],
        [ 0.3250,  0.0661, -0.3695],
        [ 0.3250,  0.0661, -0.3694],

15it [06:28, 25.95s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3467,  0.0567, -0.3706],
        [ 0.3467,  0.0567, -0.3706],
        [ 0.3467,  0.0567, -0.3706],
        [ 0.3468,  0.0568, -0.3709],
        [ 0.3467,  0.0568, -0.3707],
        [ 0.3467,  0.0567, -0.3706],
        [ 0.3467,  0.0567, -0.3706],

16it [06:53, 25.62s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3835,  0.0442, -0.3874],
        [ 0.3832,  0.0441, -0.3872],
        [ 0.3834,  0.0442, -0.3874],
        [ 0.3833,  0.0441, -0.3872],
        [ 0.3833,  0.0441, -0.3873],
        [ 0.3829,  0.0440, -0.3870],
        [ 0.3832,  0.0441, -0.3873],

17it [07:18, 25.56s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4129,  0.0334, -0.4012],
        [ 0.4130,  0.0334, -0.4012],
        [ 0.4132,  0.0335, -0.4014],
        [ 0.4130,  0.0334, -0.4013],
        [ 0.4132,  0.0335, -0.4014],
        [ 0.4131,  0.0334, -0.4013],
        [ 0.4130,  0.0334, -0.4012],

18it [07:44, 25.62s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4487,  0.0178, -0.4107],
        [ 0.4487,  0.0178, -0.4107],
        [ 0.4486,  0.0178, -0.4107],
        [ 0.4485,  0.0177, -0.4105],
        [ 0.4488,  0.0178, -0.4108],
        [ 0.4488,  0.0178, -0.4107],
        [ 0.4488,  0.0178, -0.4108],

19it [08:09, 25.54s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4794, -0.0024, -0.4039],
        [ 0.4793, -0.0024, -0.4039],
        [ 0.4794, -0.0024, -0.4039],
        [ 0.4794, -0.0024, -0.4039],
        [ 0.4793, -0.0024, -0.4037],
        [ 0.4795, -0.0024, -0.4041],
        [ 0.4795, -0.0024, -0.4040],

20it [08:35, 25.46s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5235, -0.0275, -0.4091],
        [ 0.5238, -0.0275, -0.4094],
        [ 0.5237, -0.0275, -0.4093],
        [ 0.5230, -0.0275, -0.4086],
        [ 0.5236, -0.0275, -0.4092],
        [ 0.5235, -0.0275, -0.4091],
        [ 0.5237, -0.0275, -0.4093],

21it [08:59, 25.30s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5816, -0.0630, -0.4136],
        [ 0.5818, -0.0631, -0.4137],
        [ 0.5820, -0.0631, -0.4139],
        [ 0.5820, -0.0631, -0.4139],
        [ 0.5818, -0.0631, -0.4137],
        [ 0.5818, -0.0631, -0.4138],
        [ 0.5819, -0.0631, -0.4138],

22it [09:25, 25.33s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6328, -0.1024, -0.3960],
        [ 0.6329, -0.1025, -0.3960],
        [ 0.6326, -0.1024, -0.3958],
        [ 0.6328, -0.1025, -0.3960],
        [ 0.6330, -0.1025, -0.3961],
        [ 0.6330, -0.1025, -0.3961],
        [ 0.6330, -0.1025, -0.3961],

23it [09:51, 25.49s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6465, -0.1305, -0.3407],
        [ 0.6465, -0.1305, -0.3408],
        [ 0.6464, -0.1305, -0.3407],
        [ 0.6466, -0.1305, -0.3408],
        [ 0.6465, -0.1305, -0.3407],
        [ 0.6464, -0.1304, -0.3407],
        [ 0.6465, -0.1305, -0.3407],

24it [10:16, 25.51s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6658, -0.1585, -0.2910],
        [ 0.6660, -0.1586, -0.2911],
        [ 0.6657, -0.1585, -0.2910],
        [ 0.6661, -0.1586, -0.2911],
        [ 0.6664, -0.1586, -0.2912],
        [ 0.6658, -0.1585, -0.2910],
        [ 0.6659, -0.1585, -0.2911],

25it [10:41, 25.35s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6912, -0.1892, -0.2462],
        [ 0.6912, -0.1892, -0.2462],
        [ 0.6908, -0.1891, -0.2461],
        [ 0.6917, -0.1893, -0.2462],
        [ 0.6914, -0.1893, -0.2462],
        [ 0.6913, -0.1892, -0.2462],
        [ 0.6911, -0.1892, -0.2461],

26it [11:05, 24.95s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7081, -0.2157, -0.2064],
        [ 0.7079, -0.2157, -0.2064],
        [ 0.7079, -0.2156, -0.2064],
        [ 0.7083, -0.2158, -0.2064],
        [ 0.7083, -0.2158, -0.2064],
        [ 0.7074, -0.2155, -0.2063],
        [ 0.7082, -0.2157, -0.2064],

27it [11:35, 26.46s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7505, -0.2611, -0.1723],
        [ 0.7505, -0.2611, -0.1723],
        [ 0.7505, -0.2610, -0.1722],
        [ 0.7504, -0.2610, -0.1723],
        [ 0.7503, -0.2610, -0.1723],
        [ 0.7501, -0.2609, -0.1723],
        [ 0.7502, -0.2610, -0.1723],

28it [12:01, 26.11s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7657, -0.2913, -0.1281],
        [ 0.7654, -0.2911, -0.1281],
        [ 0.7653, -0.2911, -0.1281],
        [ 0.7659, -0.2914, -0.1281],
        [ 0.7656, -0.2912, -0.1281],
        [ 0.7654, -0.2911, -0.1281],
        [ 0.7658, -0.2913, -0.1281],

29it [12:26, 25.95s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7622, -0.3013, -0.0970],
        [ 0.7623, -0.3013, -0.0970],
        [ 0.7626, -0.3015, -0.0970],
        [ 0.7625, -0.3014, -0.0970],
        [ 0.7626, -0.3014, -0.0970],
        [ 0.7624, -0.3013, -0.0970],
        [ 0.7625, -0.3014, -0.0970],

30it [12:51, 25.67s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7565, -0.3110, -0.0610],
        [ 0.7568, -0.3111, -0.0610],
        [ 0.7564, -0.3109, -0.0610],
        [ 0.7566, -0.3110, -0.0610],
        [ 0.7569, -0.3112, -0.0610],
        [ 0.7571, -0.3113, -0.0609],
        [ 0.7563, -0.3108, -0.0611],

31it [13:16, 25.51s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7147, -0.2896, -0.0459],
        [ 0.7149, -0.2897, -0.0458],
        [ 0.7149, -0.2897, -0.0459],
        [ 0.7150, -0.2898, -0.0458],
        [ 0.7151, -0.2898, -0.0458],
        [ 0.7152, -0.2898, -0.0458],
        [ 0.7148, -0.2897, -0.0459],

32it [13:41, 25.41s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6830, -0.2717, -0.0428],
        [ 0.6824, -0.2714, -0.0429],
        [ 0.6827, -0.2716, -0.0429],
        [ 0.6827, -0.2716, -0.0428],
        [ 0.6828, -0.2716, -0.0428],
        [ 0.6829, -0.2717, -0.0428],
        [ 0.6825, -0.2715, -0.0429],

33it [14:07, 25.31s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6411, -0.2477, -0.0386],
        [ 0.6419, -0.2481, -0.0384],
        [ 0.6417, -0.2480, -0.0384],
        [ 0.6417, -0.2480, -0.0384],
        [ 0.6422, -0.2483, -0.0383],
        [ 0.6415, -0.2479, -0.0385],
        [ 0.6417, -0.2480, -0.0384],

34it [14:31, 25.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6249, -0.2425, -0.0286],
        [ 0.6248, -0.2425, -0.0287],
        [ 0.6251, -0.2426, -0.0286],
        [ 0.6251, -0.2427, -0.0286],
        [ 0.6251, -0.2427, -0.0286],
        [ 0.6247, -0.2424, -0.0287],
        [ 0.6249, -0.2426, -0.0286],

35it [14:56, 25.04s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6398, -0.2581, -0.0178],
        [ 0.6400, -0.2582, -0.0178],
        [ 0.6398, -0.2581, -0.0178],
        [ 0.6398, -0.2581, -0.0178],
        [ 0.6400, -0.2582, -0.0178],
        [ 0.6398, -0.2581, -0.0178],
        [ 0.6398, -0.2581, -0.0178],

36it [23:48, 177.20s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6637, -0.2764, -0.0156],
        [ 0.6640, -0.2765, -0.0154],
        [ 0.6638, -0.2764, -0.0155],
        [ 0.6640, -0.2765, -0.0155],
        [ 0.6639, -0.2765, -0.0155],
        [ 0.6641, -0.2766, -0.0154],
        [ 0.6641, -0.2766, -0.0154],

37it [24:20, 133.65s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6973, -0.3017, -0.0115],
        [ 0.6972, -0.3017, -0.0115],
        [ 0.6974, -0.3018, -0.0114],
        [ 0.6975, -0.3019, -0.0114],
        [ 0.6971, -0.3017, -0.0115],
        [ 0.6974, -0.3019, -0.0114],
        [ 0.6973, -0.3018, -0.0115],

38it [24:46, 101.34s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7402, -0.3343, -0.0059],
        [ 0.7402, -0.3343, -0.0059],
        [ 0.7398, -0.3341, -0.0060],
        [ 0.7401, -0.3342, -0.0059],
        [ 0.7401, -0.3342, -0.0059],
        [ 0.7401, -0.3342, -0.0059],
        [ 0.7398, -0.3340, -0.0060],

39it [25:11, 78.41s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7529, -0.3434, -0.0080],
        [ 0.7527, -0.3432, -0.0080],
        [ 0.7525, -0.3431, -0.0081],
        [ 0.7528, -0.3433, -0.0080],
        [ 0.7527, -0.3432, -0.0080],
        [ 0.7525, -0.3431, -0.0081],
        [ 0.7528, -0.3433, -0.0080],

40it [25:39, 63.16s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 7.8398e-01, -3.6935e-01,  6.1108e-04],
        [ 7.8373e-01, -3.6919e-01,  5.2886e-04],
        [ 7.8423e-01, -3.6951e-01,  6.8936e-04],
        [ 7.8437e-01, -3.6960e-01,  7.3677e-04],
        [ 7.8416e-01, -3.6946e-01,  6.6806e-04],
        [ 7.8426e-01, -3.6951e-01,  7.0821e-04],
        [ 7.8426e-01, -3.6953e-01,  7.0038e-04],

41it [26:03, 51.46s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7907, -0.3790,  0.0103],
        [ 0.7911, -0.3793,  0.0105],
        [ 0.7908, -0.3791,  0.0104],
        [ 0.7907, -0.3791,  0.0103],
        [ 0.7909, -0.3792,  0.0104],
        [ 0.7908, -0.3791,  0.0104],
        [ 0.7908, -0.3791,  0.0104],

42it [26:29, 44.01s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8176, -0.4072,  0.0315],
        [ 0.8175, -0.4072,  0.0314],
        [ 0.8173, -0.4070,  0.0314],
        [ 0.8172, -0.4070,  0.0314],
        [ 0.8171, -0.4069,  0.0313],
        [ 0.8170, -0.4068,  0.0313],
        [ 0.8174, -0.4071,  0.0314],

43it [26:54, 38.21s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8513, -0.4407,  0.0534],
        [ 0.8510, -0.4405,  0.0533],
        [ 0.8513, -0.4407,  0.0534],
        [ 0.8512, -0.4406,  0.0533],
        [ 0.8517, -0.4410,  0.0536],
        [ 0.8510, -0.4405,  0.0533],
        [ 0.8513, -0.4407,  0.0534],

44it [27:17, 33.72s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9172, -0.4927,  0.0643],
        [ 0.9170, -0.4926,  0.0643],
        [ 0.9170, -0.4926,  0.0643],
        [ 0.9174, -0.4929,  0.0644],
        [ 0.9168, -0.4925,  0.0642],
        [ 0.9162, -0.4920,  0.0640],
        [ 0.9170, -0.4926,  0.0643],

45it [27:47, 32.55s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9539, -0.5123,  0.0464],
        [ 0.9542, -0.5125,  0.0464],
        [ 0.9543, -0.5125,  0.0465],
        [ 0.9536, -0.5120,  0.0463],
        [ 0.9540, -0.5123,  0.0464],
        [ 0.9543, -0.5125,  0.0465],
        [ 0.9542, -0.5125,  0.0465],

46it [28:14, 30.86s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.9592, -0.5164,  0.0446],
        [ 0.9592, -0.5164,  0.0446],
        [ 0.9591, -0.5164,  0.0446],
        [ 0.9591, -0.5163,  0.0446],
        [ 0.9594, -0.5165,  0.0447],
        [ 0.9597, -0.5167,  0.0448],
        [ 0.9592, -0.5164,  0.0446],

47it [28:37, 28.45s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.8788, -0.4444,  0.0065],
        [ 0.8796, -0.4450,  0.0067],
        [ 0.8794, -0.4448,  0.0067],
        [ 0.8793, -0.4447,  0.0066],
        [ 0.8794, -0.4448,  0.0067],
        [ 0.8791, -0.4446,  0.0066],
        [ 0.8794, -0.4448,  0.0067],

48it [29:01, 27.03s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7977, -0.3751, -0.0257],
        [ 0.7974, -0.3748, -0.0258],
        [ 0.7976, -0.3750, -0.0258],
        [ 0.7980, -0.3752, -0.0256],
        [ 0.7978, -0.3751, -0.0257],
        [ 0.7975, -0.3749, -0.0258],
        [ 0.7970, -0.3746, -0.0259],

49it [29:26, 26.55s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6955, -0.2999, -0.0411],
        [ 0.6954, -0.2998, -0.0411],
        [ 0.6953, -0.2998, -0.0411],
        [ 0.6956, -0.2999, -0.0411],
        [ 0.6956, -0.2999, -0.0410],
        [ 0.6953, -0.2998, -0.0411],
        [ 0.6957, -0.3000, -0.0410],

50it [29:53, 26.57s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6131, -0.2401, -0.0550],
        [ 0.6135, -0.2403, -0.0550],
        [ 0.6131, -0.2401, -0.0550],
        [ 0.6133, -0.2402, -0.0550],
        [ 0.6128, -0.2399, -0.0551],
        [ 0.6131, -0.2401, -0.0550],
        [ 0.6129, -0.2399, -0.0551],

51it [30:18, 26.09s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5453, -0.1914, -0.0708],
        [ 0.5451, -0.1913, -0.0708],
        [ 0.5452, -0.1913, -0.0708],
        [ 0.5451, -0.1913, -0.0708],
        [ 0.5453, -0.1913, -0.0708],
        [ 0.5450, -0.1912, -0.0709],
        [ 0.5452, -0.1913, -0.0708],

52it [30:44, 26.24s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4934, -0.1548, -0.0837],
        [ 0.4932, -0.1548, -0.0838],
        [ 0.4935, -0.1549, -0.0837],
        [ 0.4936, -0.1550, -0.0837],
        [ 0.4936, -0.1549, -0.0837],
        [ 0.4935, -0.1549, -0.0837],
        [ 0.4935, -0.1549, -0.0837],

53it [31:14, 27.29s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4479, -0.1262, -0.0909],
        [ 0.4479, -0.1262, -0.0909],
        [ 0.4478, -0.1262, -0.0910],
        [ 0.4479, -0.1262, -0.0909],
        [ 0.4478, -0.1262, -0.0909],
        [ 0.4478, -0.1262, -0.0909],
        [ 0.4478, -0.1262, -0.0910],

54it [31:42, 27.40s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4197, -0.1066, -0.0999],
        [ 0.4195, -0.1065, -0.0999],
        [ 0.4197, -0.1066, -0.0999],
        [ 0.4197, -0.1066, -0.0999],
        [ 0.4196, -0.1066, -0.0999],
        [ 0.4197, -0.1066, -0.0999],
        [ 0.4197, -0.1066, -0.0999],

55it [32:11, 28.07s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3989, -0.0934, -0.1025],
        [ 0.3989, -0.0934, -0.1025],
        [ 0.3989, -0.0934, -0.1025],
        [ 0.3989, -0.0934, -0.1023],
        [ 0.3989, -0.0934, -0.1023],
        [ 0.3989, -0.0934, -0.1023],
        [ 0.3989, -0.0934, -0.1024],

56it [32:42, 28.88s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3852, -0.0836, -0.1014],
        [ 0.3852, -0.0836, -0.1014],
        [ 0.3852, -0.0836, -0.1014],
        [ 0.3852, -0.0836, -0.1014],
        [ 0.3853, -0.0835, -0.1013],
        [ 0.3853, -0.0834, -0.1011],
        [ 0.3852, -0.0836, -0.1014],

57it [33:11, 28.99s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3641, -0.0723, -0.1078],
        [ 0.3642, -0.0724, -0.1078],
        [ 0.3640, -0.0723, -0.1078],
        [ 0.3641, -0.0724, -0.1078],
        [ 0.3641, -0.0724, -0.1078],
        [ 0.3641, -0.0724, -0.1078],
        [ 0.3641, -0.0724, -0.1078],

58it [33:39, 28.58s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3462, -0.0587, -0.1056],
        [ 0.3462, -0.0587, -0.1056],
        [ 0.3462, -0.0587, -0.1056],
        [ 0.3462, -0.0588, -0.1056],
        [ 0.3462, -0.0587, -0.1056],
        [ 0.3462, -0.0588, -0.1056],
        [ 0.3462, -0.0587, -0.1056],

59it [34:08, 28.63s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3332, -0.0402, -0.1000],
        [ 0.3332, -0.0402, -0.1000],
        [ 0.3332, -0.0401, -0.0999],
        [ 0.3332, -0.0402, -0.0999],
        [ 0.3332, -0.0402, -0.0999],
        [ 0.3332, -0.0402, -0.1000],
        [ 0.3332, -0.0400, -0.0998],

60it [34:38, 29.14s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],
        [ 0.3260, -0.0303, -0.0972],

61it [35:07, 29.13s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3252, -0.0331, -0.1015],
        [ 0.3253, -0.0331, -0.1015],
        [ 0.3252, -0.0331, -0.1015],
        [ 0.3252, -0.0331, -0.1015],
        [ 0.3252, -0.0331, -0.1015],
        [ 0.3252, -0.0331, -0.1015],
        [ 0.3252, -0.0331, -0.1015],

62it [35:39, 29.97s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3214, -0.0279, -0.1018],
        [ 0.3214, -0.0279, -0.1018],
        [ 0.3214, -0.0279, -0.1018],
        [ 0.3215, -0.0279, -0.1018],
        [ 0.3214, -0.0279, -0.1018],
        [ 0.3214, -0.0279, -0.1018],
        [ 0.3214, -0.0278, -0.1018],

63it [36:15, 31.63s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],
        [ 0.3215, -0.0295, -0.1087],

64it [36:45, 31.20s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],
        [ 0.3276, -0.0343, -0.1143],

65it [37:13, 30.26s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],
        [ 0.3325, -0.0402, -0.1187],

66it [37:41, 29.75s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],
        [ 0.3392, -0.0486, -0.1249],

67it [38:11, 29.71s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3566, -0.0714, -0.1466],
        [ 0.3566, -0.0713, -0.1466],
        [ 0.3566, -0.0714, -0.1466],
        [ 0.3566, -0.0714, -0.1466],
        [ 0.3566, -0.0714, -0.1466],
        [ 0.3566, -0.0714, -0.1467],
        [ 0.3566, -0.0714, -0.1466],

68it [38:45, 30.91s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.3809, -0.1061, -0.1743],
        [ 0.3809, -0.1061, -0.1743],
        [ 0.3809, -0.1061, -0.1743],
        [ 0.3810, -0.1061, -0.1743],
        [ 0.3809, -0.1061, -0.1743],
        [ 0.3809, -0.1061, -0.1743],
        [ 0.3810, -0.1061, -0.1742],

69it [39:18, 31.70s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4231, -0.1597, -0.2191],
        [ 0.4231, -0.1597, -0.2191],
        [ 0.4232, -0.1596, -0.2192],
        [ 0.4232, -0.1596, -0.2192],
        [ 0.4232, -0.1596, -0.2192],
        [ 0.4231, -0.1597, -0.2191],
        [ 0.4231, -0.1596, -0.2192],

70it [39:55, 33.25s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4472, -0.1899, -0.2225],
        [ 0.4472, -0.1899, -0.2225],
        [ 0.4472, -0.1899, -0.2225],
        [ 0.4472, -0.1898, -0.2226],
        [ 0.4472, -0.1899, -0.2225],
        [ 0.4471, -0.1899, -0.2225],
        [ 0.4472, -0.1899, -0.2225],

71it [40:34, 35.01s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4487, -0.2115, -0.2012],
        [ 0.4486, -0.2115, -0.2012],
        [ 0.4486, -0.2115, -0.2012],
        [ 0.4487, -0.2114, -0.2012],
        [ 0.4486, -0.2115, -0.2012],
        [ 0.4487, -0.2115, -0.2012],
        [ 0.4486, -0.2115, -0.2012],

72it [41:38, 43.71s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4932, -0.2706, -0.2176],
        [ 0.4932, -0.2705, -0.2175],
        [ 0.4933, -0.2707, -0.2177],
        [ 0.4932, -0.2706, -0.2176],
        [ 0.4933, -0.2707, -0.2177],
        [ 0.4932, -0.2707, -0.2176],
        [ 0.4933, -0.2707, -0.2177],

73it [42:48, 51.63s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4976, -0.2612, -0.2136],
        [ 0.4975, -0.2611, -0.2135],
        [ 0.4976, -0.2612, -0.2136],
        [ 0.4977, -0.2613, -0.2137],
        [ 0.4977, -0.2613, -0.2137],
        [ 0.4976, -0.2612, -0.2136],
        [ 0.4975, -0.2610, -0.2134],

74it [43:55, 56.18s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.4978, -0.2479, -0.2077],
        [ 0.4978, -0.2480, -0.2078],
        [ 0.4977, -0.2479, -0.2076],
        [ 0.4979, -0.2480, -0.2078],
        [ 0.4978, -0.2480, -0.2077],
        [ 0.4977, -0.2478, -0.2076],
        [ 0.4976, -0.2479, -0.2076],

75it [44:50, 55.89s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.5439, -0.3122, -0.2310],
        [ 0.5438, -0.3121, -0.2310],
        [ 0.5439, -0.3122, -0.2310],
        [ 0.5439, -0.3121, -0.2310],
        [ 0.5439, -0.3121, -0.2310],
        [ 0.5438, -0.3121, -0.2309],
        [ 0.5438, -0.3121, -0.2309],

76it [45:31, 51.37s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.6363, -0.4374, -0.2852],
        [ 0.6365, -0.4376, -0.2856],
        [ 0.6365, -0.4376, -0.2857],
        [ 0.6364, -0.4375, -0.2855],
        [ 0.6364, -0.4375, -0.2854],
        [ 0.6365, -0.4376, -0.2856],
        [ 0.6364, -0.4374, -0.2854],

77it [46:08, 46.94s/it]
e2 shape:  torch.Size([8, 20, 1024])
y_pred: tensor([[ 0.7309, -0.5269, -0.3673],
        [ 0.7310, -0.5270, -0.3674],
        [ 0.7309, -0.5269, -0.3673],
        [ 0.7311, -0.5271, -0.3674],
        [ 0.7309, -0.5269, -0.3673],
        [ 0.7311, -0.5271, -0.3674],
        [ 0.7309, -0.5269, -0.3673],

